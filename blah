
n_and_t_list = input().split(" ")
n = int(n_and_t_list[0])  # number of different pipe sizes
t = int(n_and_t_list[1])  # size of each pipe produced by OBI
p = [0]
wt = [0]
k = [[0]*(t+1) for _ in range(n+1)]  # initialize array[n+1][t+1] with 0s
for i in range(0, n):
    client_pipe_list = input().split(" ")
    c = int(client_pipe_list[0])  # length of client ordered pipe
    v = int(client_pipe_list[1])  # sales value of client ordered pipe
    wt.append(c)
    p.append(v)
#print_k(k)
#print(p)
#print(wt)
#def print_k(k1):
#    k_str = ""
#    for i in range(len(k1)):
#        for j in range(len(k1[0])):
#            k_str += str(k1[i][j])
#        k_str += "\n"
#    print(k_str)

#print_k(k)
# need another counter
#for i in range(1, n+1):
#
#    value = p[i]
#    size = wt[i]
#    count1=0
#    count2=-1
#    for w in range(1, t+1):
#        if w % size == 0:
#            count1+=1
#        if size <= w:
#            if value*count1 < k[i-1][w]:
#                if w % size == 0:
#                    count2+=1
#                k[i][w] = max((value*count2) + k[i - 1][w - size], k[i - 1][w], value * count1)
#            else:
#                k[i][w] = max(value + k[i - 1][w - size], k[i - 1][w], value*count1)
#        else:
#            k[i][w] = max(k[i-1][w], value*count1)
        #print_k(k)


for i in range(1, n+1):

    value = p[i]
    size = wt[i]
    count1=0
    for w in range(1, t+1):
        if w % size == 0:
            count1+=1
        if size <= w:
            k[i][w] = max(value + k[i - 1][w - size], k[i - 1][w], value*count1)
        else:
            k[i][w] = max(k[i-1][w], value*count1)
        #print_k(k)
print(k[n][t])
